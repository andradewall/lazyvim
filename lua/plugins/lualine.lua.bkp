-- Bubbles config for lualine
-- Author: lokesh-krishna
-- MIT license, see LICENSE for more details.

-- stylua: ignore
local colors = {
  blue   = '#89b4fa',
  cyan   = '#94e2d5',
  black  = '#181825',
  white  = '#cdd6f4',
  red    = '#f38ba8',
  violet = '#cba6f7',
  grey   = '#313244',
}

local bubbles_theme = {
  normal = {
    a = { fg = colors.black, bg = colors.violet },
    b = { fg = colors.white, bg = colors.grey },
    c = { fg = colors.white },
  },

  insert = { a = { fg = colors.black, bg = colors.blue } },
  visual = { a = { fg = colors.black, bg = colors.cyan } },
  replace = { a = { fg = colors.black, bg = colors.red } },

  inactive = {
    a = { fg = colors.white, bg = colors.black },
    b = { fg = colors.white, bg = colors.black },
    c = { fg = colors.white },
  },
}

return {
  {
    "nvim-lualine/lualine.nvim",
    event = "VeryLazy",
    init = function()
      vim.g.lualine_laststatus = vim.o.laststatus
      if vim.fn.argc(-1) > 0 then
        -- set an empty statusline till lualine loads
        vim.o.statusline = " "
      else
        -- hide the statusline on the starter page
        vim.o.laststatus = 0
      end
    end,
    opts = function()
      -- PERF: we don't need this lualine require madness ðŸ¤·
      local lualine_require = require("lualine_require")
      lualine_require.require = require

      vim.o.laststatus = vim.g.lualine_laststatus

      local opts = {
        options = {
          theme = bubbles_theme,
          component_separators = "",
          section_separators = { left = "î‚´", right = "î‚¶" },
        },
        sections = {
          lualine_a = { { "mode", separator = { left = "î‚¶" }, right_padding = 2 } },
          lualine_b = {
            { "filetype", icons_enabled = false },
            { "branch", icons_enabled = false },
          },
          lualine_c = {
            "%=", --[[ add your center compoentnts here in place of this comment ]]
          },
          lualine_x = {},
          lualine_y = {
            "diagnostics",
            "diff",
            -- stylua: ignore
            {
              function()
                return require("noice").api.status.mode.get()
              end,
              cond = function()
                return package.loaded["noice"] and require("noice").api.status.mode.has()
              end,
              -- color = { fg = Snacks.util.color(...) }
            },
            "location",
          },
          lualine_z = {
            { "progress", separator = { right = "î‚´" }, left_padding = 2 },
          },
        },
        inactive_sections = {
          lualine_a = { "filename" },
          lualine_b = {},
          lualine_c = {},
          lualine_x = {},
          lualine_y = {},
          lualine_z = { "location" },
        },
        tabline = {},
        extensions = { "neo-tree", "lazy" },
      }

      -- do not add trouble symbols if aerial is enabled
      -- if vim.g.trouble_lualine then
      --   local trouble = require("trouble")
      --   local symbols = trouble.statusline
      --     and trouble.statusline({
      --       mode = "symbols",
      --       groups = {},
      --       title = false,
      --       filter = { range = true },
      --       format = "{kind_icon}{symbol.name:Normal}",
      --       hl_group = "lualine_c_normal",
      --     })
      --   table.insert(opts.sections.lualine_c, {
      --     symbols and symbols.get,
      --     cond = symbols and symbols.has,
      --   })
      -- end

      return opts
    end,
  },
}
